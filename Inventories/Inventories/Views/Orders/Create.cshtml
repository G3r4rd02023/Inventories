@model Inventories.Models.ModelViews.NewOrderView

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Order</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="row">
        <div class="col-md-6">

            <div class="form-group">
                @Html.LabelFor(model => model.CustomerId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("CustomerId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group">
                @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save Order" class="btn btn-primary" />
                    @Html.ActionLink("Add Product", "AddProduct", new { }, new { @class = "btn btn-success" })
                    @Html.ActionLink("Back to Order", "Index", new { }, new { @class = "btn btn-warning" })
                </div>
            </div>
        </div>

    </div>
   
</div>
}
<h4>Details</h4>
<hr />
@if (Model.Details.Count == 0)
{
    <h5>No se encontraron registros</h5>
}
else
{
<table class="table table-striped">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Details[0].Product.Image)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Details[0].Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Details[0].TaxRate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Details[0].Price)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Details[0].Quantity)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Details[0].Value)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.Details)
    {
        <tr>
            <td>
                <img width="100" src="@Url.Action("GetImage", "Orders", new { id = item.ProductId })" alt="Image" />
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TaxRate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.Value)
            </td>
            <td>
                |
                @Html.ActionLink("Delete", "DeleteProduct", new { id = item.ProductId }, new { @class = "btn btn-warning", onclick = "return confirm('Estás seguro de eliminar este registro??')" })
            </td>
        </tr>
    }
        <tr>
            <td colspan="4">
                <strong>Total</strong>
            </td>

            <td>
                <strong>@Html.DisplayFor(modelItem => Model.TotalQuantity)</strong> 
            </td>

            <td>
                <strong>@Html.DisplayFor(modelItem => Model.TotalValue)</strong>
            </td>
            
        </tr>
    

</table>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
